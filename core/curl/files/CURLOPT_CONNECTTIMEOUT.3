.\" generated by cd2nroff 0.1 from CURLOPT_CONNECTTIMEOUT.md
.TH CURLOPT_CONNECTTIMEOUT 3 "2024-08-02" libcurl
.SH NAME
CURLOPT_CONNECTTIMEOUT \- timeout for the connect phase
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_CONNECTTIMEOUT, long timeout);
.fi
.SH DESCRIPTION
Pass a long. It sets the maximum time in seconds that you allow the connection
phase to take. This timeout only limits the connection phase, it has no impact
once libcurl has connected. The connection phase includes the name resolve
(DNS) and all protocol handshakes and negotiations until there is an
established connection with the remote side.

Set this option to zero to switch to the default built\-in connection timeout \-
300 seconds. See also the \fICURLOPT_TIMEOUT(3)\fP option.

\fICURLOPT_CONNECTTIMEOUT_MS(3)\fP is the same function but set in milliseconds.

If both \fICURLOPT_CONNECTTIMEOUT(3)\fP and \fICURLOPT_CONNECTTIMEOUT_MS(3)\fP
are set, the value set last is used.

The connection timeout is included in the general all\-covering
\fICURLOPT_TIMEOUT(3)\fP:

With \fICURLOPT_CONNECTTIMEOUT(3)\fP set to 3 and \fICURLOPT_TIMEOUT(3)\fP set
to 5, the operation can never last longer than 5 seconds, and the connection
phase cannot last longer than 3 seconds.

With \fICURLOPT_CONNECTTIMEOUT(3)\fP set to 4 and \fICURLOPT_TIMEOUT(3)\fP set
to 2, the operation can never last longer than 2 seconds. Including the
connection phase.

This option may cause libcurl to use the SIGALRM signal to timeout system
calls on builds not using asynch DNS. In unix\-like systems, this might cause
signals to be used unless \fICURLOPT_NOSIGNAL(3)\fP is set.
.SH DEFAULT
300
.SH PROTOCOLS
This functionality affects all supported protocols
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

    /* complete connection within 10 seconds */
    curl_easy_setopt(curl, CURLOPT_CONNECTTIMEOUT, 10L);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 7.7
.SH RETURN VALUE
Returns CURLE_OK. Returns CURLE_BAD_FUNCTION_ARGUMENT if set to a negative
value or a value that when converted to milliseconds is too large.
.SH SEE ALSO
.BR CURLOPT_LOW_SPEED_LIMIT (3),
.BR CURLOPT_MAX_RECV_SPEED_LARGE (3),
.BR CURLOPT_TIMEOUT (3)
