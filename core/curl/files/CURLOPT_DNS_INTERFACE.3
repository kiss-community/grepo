.\" generated by cd2nroff 0.1 from CURLOPT_DNS_INTERFACE.md
.TH CURLOPT_DNS_INTERFACE 3 "2024-11-09" libcurl
.SH NAME
CURLOPT_DNS_INTERFACE \- interface to speak DNS over
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_DNS_INTERFACE, char *ifname);
.fi
.SH DESCRIPTION
Pass a char pointer as parameter. Set the name of the network interface that
the DNS resolver should bind to. This must be an interface name (not an
address). Set this option to NULL to use the default setting (do not bind to a
specific interface).

The application does not have to keep the string around after setting this
option.

Using this option multiple times makes the last set string override the
previous ones. Set it to NULL to disable its use again.
.SH DEFAULT
NULL
.SH PROTOCOLS
This functionality affects all supported protocols
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/foo.bin");
    curl_easy_setopt(curl, CURLOPT_DNS_INTERFACE, "eth0");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH NOTES
This option requires that libcurl was built with a resolver backend that
supports this operation. The c\-ares backend is the only such one.
.SH AVAILABILITY
Added in curl 7.33.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, CURLE_UNKNOWN_OPTION if not,
or CURLE_NOT_BUILT_IN if support was disabled at compile\-time.
.SH SEE ALSO
.BR CURLOPT_DNS_LOCAL_IP4 (3),
.BR CURLOPT_DNS_LOCAL_IP6 (3),
.BR CURLOPT_DNS_SERVERS (3),
.BR CURLOPT_INTERFACE (3)
