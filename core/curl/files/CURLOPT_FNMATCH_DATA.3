.\" generated by cd2nroff 0.1 from CURLOPT_FNMATCH_DATA.md
.TH CURLOPT_FNMATCH_DATA 3 "2025-02-12" libcurl
.SH NAME
CURLOPT_FNMATCH_DATA \- pointer passed to the fnmatch callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_FNMATCH_DATA,
                          void *pointer);
.fi
.SH DESCRIPTION
Pass a pointer that is untouched by libcurl and passed as the ptr argument to
the \fICURLOPT_FNMATCH_FUNCTION(3)\fP.
.SH DEFAULT
NULL
.SH PROTOCOLS
This functionality affects ftp only
.SH EXAMPLE
.nf
extern int string_match(const char *s1, const char *s2);

struct local_stuff {
  void *custom;
};

static int my_fnmatch(void *clientp,
                      const char *pattern, const char *string)
{
  struct local_stuff *my = clientp;
  printf("my ptr: %p\\n", my->custom);

  if(string_match(pattern, string))
    return CURL_FNMATCHFUNC_MATCH;
  else
    return CURL_FNMATCHFUNC_NOMATCH;
}

int main(void)
{
  struct local_stuff local_data;
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "ftp://ftp.example.com/file*");
    curl_easy_setopt(curl, CURLOPT_WILDCARDMATCH, 1L);
    curl_easy_setopt(curl, CURLOPT_FNMATCH_FUNCTION, my_fnmatch);
    curl_easy_setopt(curl, CURLOPT_FNMATCH_DATA, &local_data);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 7.21.0
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLOPT_FNMATCH_FUNCTION (3),
.BR CURLOPT_WILDCARDMATCH (3)
