.\" generated by cd2nroff 0.1 from CURLOPT_INFILESIZE.md
.TH CURLOPT_INFILESIZE 3 "2025-03-23" libcurl
.SH NAME
CURLOPT_INFILESIZE \- size of the input file to send off
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_INFILESIZE, long filesize);
.fi
.SH DESCRIPTION
When uploading a file to a remote site, \fIfilesize\fP should be used to tell
libcurl what the expected size of the input file is. This value must be passed
as a long. See also \fICURLOPT_INFILESIZE_LARGE(3)\fP for sending files larger
than 2GB.

For uploading using SCP, this option or \fICURLOPT_INFILESIZE_LARGE(3)\fP is
mandatory.

To unset this value again, set it to \-1.

Using \fICURLOPT_UPLOAD(3)\fP to an HTTP/1.1 server and this value set to \-1, makes
libcurl do a chunked transfer\-encoded upload.

When sending emails using SMTP, this command can be used to specify the
optional SIZE parameter for the MAIL FROM command.

This option does not limit how much data libcurl actually sends, as that is
controlled entirely by what the read callback returns, but telling one value
and sending a different amount may lead to errors.
.SH DEFAULT
Unset
.SH PROTOCOLS
This functionality affects all supported protocols
.SH EXAMPLE
.nf

#define FILE_SIZE 12345L

int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    long uploadsize = FILE_SIZE;

    curl_easy_setopt(curl, CURLOPT_URL,
                     "ftp://example.com/destination.tar.gz");

    curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);

    curl_easy_setopt(curl, CURLOPT_INFILESIZE, uploadsize);

    curl_easy_perform(curl);
  }
}
.fi
.SH HISTORY
SMTP support added in 7.23.0
.SH AVAILABILITY
Added in curl 7.1
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLINFO_CONTENT_LENGTH_UPLOAD_T (3),
.BR CURLOPT_INFILESIZE_LARGE (3),
.BR CURLOPT_UPLOAD (3)
