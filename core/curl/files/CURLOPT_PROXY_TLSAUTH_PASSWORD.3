.\" generated by cd2nroff 0.1 from CURLOPT_PROXY_TLSAUTH_PASSWORD.md
.TH CURLOPT_PROXY_TLSAUTH_PASSWORD 3 "2025-03-23" libcurl
.SH NAME
CURLOPT_PROXY_TLSAUTH_PASSWORD \- password to use for proxy TLS authentication
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PROXY_TLSAUTH_PASSWORD,
                          char *pwd);
.fi
.SH DESCRIPTION
Pass a char pointer as parameter, which should point to the null\-terminated
password to use for the TLS authentication method specified with the
\fICURLOPT_PROXY_TLSAUTH_TYPE(3)\fP option. Requires that the
\fICURLOPT_PROXY_TLSAUTH_USERNAME(3)\fP option also be set.

The application does not have to keep the string around after setting this
option.

Using this option multiple times makes the last set string override the
previous ones. Set it to NULL to disable its use again.
.SH DEFAULT
NULL
.SH PROTOCOLS
This functionality affects all TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.

This option works only with the following TLS backends:
GnuTLS and OpenSSL
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_PROXY, "https://proxy");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_TYPE, "SRP");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_USERNAME, "user");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_PASSWORD, "secret");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 7.52.0
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLOPT_PROXY_TLSAUTH_TYPE (3),
.BR CURLOPT_PROXY_TLSAUTH_USERNAME (3),
.BR CURLOPT_TLSAUTH_TYPE (3),
.BR CURLOPT_TLSAUTH_USERNAME (3)
