.\" generated by cd2nroff 0.1 from CURLOPT_SSLKEYTYPE.md
.TH CURLOPT_SSLKEYTYPE 3 "2025-02-12" libcurl
.SH NAME
CURLOPT_SSLKEYTYPE \- type of the private key file
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSLKEYTYPE, char *type);
.fi
.SH DESCRIPTION
Pass a pointer to a null\-terminated string as parameter. The string should be
the format of your private key. Supported formats are "PEM", "DER", "ENG" and
\&"PROV".

The format "ENG" enables you to load the private key from a crypto engine. In
this case \fICURLOPT_SSLKEY(3)\fP is used as an identifier passed to the engine. You
have to set the crypto engine with \fICURLOPT_SSLENGINE(3)\fP.

The format "PROV" enables you to load the private key from a crypto provider
(Added in 8.12.0). In this case \fICURLOPT_SSLKEY(3)\fP is used as an identifier
passed to the provider.

The "DER" format does not work with OpenSSL.

The application does not have to keep the string around after setting this
option.

Using this option multiple times makes the last set string override the
previous ones. Set it to NULL to restore to internal default.
.SH DEFAULT
\&"PEM"
.SH PROTOCOLS
This functionality affects all TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.

This option works only with the following TLS backends:
BearSSL, OpenSSL and wolfSSL
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_SSLCERT, "client.pem");
    curl_easy_setopt(curl, CURLOPT_SSLKEY, "key.pem");
    curl_easy_setopt(curl, CURLOPT_SSLKEYTYPE, "PEM");
    curl_easy_setopt(curl, CURLOPT_KEYPASSWD, "s3cret");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 7.9.3
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLOPT_PROXY_SSLKEYTYPE (3),
.BR CURLOPT_SSLCERT (3),
.BR CURLOPT_SSLKEY (3)
