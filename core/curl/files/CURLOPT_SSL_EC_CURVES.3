.\" generated by cd2nroff 0.1 from CURLOPT_SSL_EC_CURVES.md
.TH CURLOPT_SSL_EC_CURVES 3 "2025-02-12" libcurl
.SH NAME
CURLOPT_SSL_EC_CURVES \- key exchange curves
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_EC_CURVES, char *list);
.fi
.SH DESCRIPTION
Pass a string as parameter with a colon delimited list of Elliptic curve (EC)
algorithms. This option defines the client\(aqs key exchange algorithms in the
SSL handshake (if the SSL backend libcurl is built to use supports it).

The application does not have to keep the string around after setting this
option.

Using this option multiple times makes the last set string override the
previous ones. Set it to NULL to restore back to internal default.
.SH DEFAULT
\&"", embedded in SSL backend
.SH PROTOCOLS
This functionality affects all TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.

This option works only with the following TLS backends:
OpenSSL and wolfSSL
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_SSL_EC_CURVES, "X25519:P-521");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 7.73.0
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLOPT_SSL_CIPHER_LIST (3),
.BR CURLOPT_SSL_OPTIONS (3),
.BR CURLOPT_TLS13_CIPHERS (3)
