.\" generated by cd2nroff 0.1 from CURLOPT_TCP_KEEPCNT.md
.TH CURLOPT_TCP_KEEPCNT 3 "2024-08-02" libcurl
.SH NAME
CURLOPT_TCP_KEEPCNT \- Maximum number of TCP keep\-alive probes
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_TCP_KEEPCNT, long cnt);
.fi
.SH DESCRIPTION
Pass a long. Sets the number of probes to send before dropping
the connection. Not all operating systems support this option.
(Added in 8.9.0)

The maximum value this option accepts is INT_MAX or whatever your
system allows.
Any larger value is capped to this amount.
.SH DEFAULT
9
.SH PROTOCOLS
This functionality affects tcp only
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

    /* enable TCP keep-alive for this transfer */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPALIVE, 1L);

    /* set keep-alive idle time to 120 seconds */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPIDLE, 120L);

    /* interval time between keep-alive probes: 60 seconds */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPINTVL, 60L);

    /* maximum number of keep-alive probes: 3 */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPCNT, 3L);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in curl 8.9.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_TCP_KEEPALIVE (3),
.BR CURLOPT_TCP_KEEPIDLE (3),
.BR CURLOPT_TCP_KEEPINTVL (3)
