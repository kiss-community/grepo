.\" generated by cd2nroff 0.1 from curl_multi_socket_all.md
.TH curl_multi_socket_all 3 "2024-09-25" libcurl
.SH NAME
curl_multi_socket_all \- reads/writes available data for all easy handles
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLMcode curl_multi_socket_all(CURLM *multi_handle,
                                int *running_handles);
.fi
.SH DESCRIPTION
This function is deprecated. Do not use. See \fIcurl_multi_socket_action(3)\fP
instead.

At return, the integer \fBrunning_handles\fP points to contains the number of
still running easy handles within the multi handle. When this number reaches
zero, all transfers are complete/done.

Force libcurl to (re\-)check all its internal sockets and transfers instead of
just a single one by calling \fIcurl_multi_socket_all(3)\fP. Note that there should
not be any reason to use this function.
.SH PROTOCOLS
This functionality affects all supported protocols
.SH EXAMPLE
.nf
int main(void)
{
  int running;
  int rc;
  CURLM *multi;
  rc = curl_multi_socket_all(multi, &running);
}
.fi
.SH AVAILABILITY
Added in curl 7.15.4
.SH RETURN VALUE
CURLMcode type, general libcurl multi interface error code.

The return code is for the whole multi stack. Problems still might have
occurred on individual transfers even when one of these functions return OK.
.SH SEE ALSO
.BR curl_multi_cleanup (3),
.BR curl_multi_fdset (3),
.BR curl_multi_info_read (3),
.BR curl_multi_init (3),
.BR the hiperfifo.c example
