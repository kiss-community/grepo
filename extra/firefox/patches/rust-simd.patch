diff --git a/src/codegen/llvm.rs b/src/codegen/llvm.rs
index b4c09849..bb482fac 100644
--- a/third_party/rust/packed_simd_2/src/codegen/llvm.rs
+++ b/third_party/rust/packed_simd_2/src/codegen/llvm.rs
@@ -5,14 +5,8 @@ use crate::sealed::Shuffle;
 #[allow(unused_imports)] // FIXME: spurious warning?
 use crate::sealed::Simd;
 
-// Shuffle intrinsics: expanded in users' crates, therefore public.
 extern "platform-intrinsic" {
-    pub fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;
-    pub fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;
-    pub fn simd_shuffle8<T, U>(x: T, y: T, idx: [u32; 8]) -> U;
-    pub fn simd_shuffle16<T, U>(x: T, y: T, idx: [u32; 16]) -> U;
-    pub fn simd_shuffle32<T, U>(x: T, y: T, idx: [u32; 32]) -> U;
-    pub fn simd_shuffle64<T, U>(x: T, y: T, idx: [u32; 64]) -> U;
+    fn simd_shuffle<T, I, U>(x: T, y: T, idx: I) -> U;
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -22,7 +16,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 2], Output = U>,
 {
-    simd_shuffle2(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -32,7 +26,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 4], Output = U>,
 {
-    simd_shuffle4(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -42,7 +36,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 8], Output = U>,
 {
-    simd_shuffle8(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -52,7 +46,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 16], Output = U>,
 {
-    simd_shuffle16(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -62,7 +56,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 32], Output = U>,
 {
-    simd_shuffle32(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 #[allow(clippy::missing_safety_doc)]
@@ -72,7 +66,7 @@ where
     T: Simd,
     <T as Simd>::Element: Shuffle<[u32; 64], Output = U>,
 {
-    simd_shuffle64(x, y, IDX)
+    simd_shuffle(x, y, IDX)
 }
 
 extern "platform-intrinsic" {
