#!/bin/sh -e

# Build cannot happen without optimizations.
export CFLAGS="${CFLAGS:--Os}"

# Build must happen outside of glibc source.
mkdir -p glibc-build
cd glibc-build

../configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --libexecdir=/usr/lib \
    --enable-bind-now \
    --enable-stack-protector=strong \
    --disable-werror \
    libc_cv_include_x86_isa_level=no

printf "%s\n" \
    "slibdir=/usr/lib" \
    "rtlddir=/usr/lib" \
    "sbindir=/usr/bin" \
    "rootsbindir=/usr/bin" > defconfigparms

cp defconfigparms configparms
echo "build-programs=no" >> configparms

# Build libs without fortify
CFLAGS="$CFLAGS -U_FORTIFY_SOURCE" \
CPPFLAGS="$CPPFLAGS -U_FORTIFY_SOURCE" \
    make -O

cp defconfigparms configparms
echo "build-programs=yes" >> configparms

make -O
make DESTDIR="$1" install

rm -f "$1/var/db/Makefile" \
      "$1/usr/bin/xtrace" \
      "$1/usr/bin/tzselect"

mkdir -p "$1/usr/lib/locale"
printf "en_US.UTF-8 UTF-8\n" > "$1/etc/locale.gen"

for script in ldd locale-gen sotruss; do
    cp -f "../sh-alternatives/$script" "$1/usr/bin/$script"
    chmod +x "$1/usr/bin/$script"
done
