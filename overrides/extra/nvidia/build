#!/bin/sh -e

: "${KERNEL_UNAME:=$(uname -r)}"

sh "NVIDIA-Linux-x86_64-${2}-no-compat32.run" --extract-only
cd "NVIDIA-Linux-x86_64-${2}-no-compat32"

mkdir -p \
    "$1/usr/bin" \
    "$1/usr/lib/gbm" \
    "$1/usr/share/man/man1" \
    "$1/usr/share/egl/egl_external_platform.d" \
    "$1/usr/share/glvnd/egl_vendor.d" \
    "$1/usr/share/nvidia" \
    "$1/usr/share/vulkan/icd.d" \
    "$1/usr/share/vulkan/implicit_layer.d" \
    "$1/etc/OpenCL/vendors/"

bins="
cuda-mps-control cuda-mps-server modprobe smi debugdump bug-report.sh
persistenced
"

libs="
libEGL_nvidia      libGLESv1_CM_nvidia libGLESv2_nvidia
libnvidia-eglcore  libnvidia-glcore    libnvidia-glsi
libnvidia-opencl   libnvidia-encode    libnvidia-rtcore
libnvidia-compiler libnvidia-allocator libnvidia-cfg
libnvidia-nvvm     libnvidia-tls       libnvidia-ml
libnvcuvid         libcuda             libnvoptix
libnvidia-ngx      libnvidia-glvkspirv libnvidia-opticalflow
libnvidia-ptxjitcompiler
"

soname_libs="
libOpenCL.so.1.0.0
"

libs="
    $libs libnvidia-vulkan-producer
"

soname_libs="
    $soname_libs libnvidia-egl-gbm.so.1.1.0
"

ln -sf ../libnvidia-allocator.so.1 "$1/usr/lib/gbm/nvidia-drm_gbm.so"

cp 10_nvidia_wayland.json 15_nvidia_gbm.json \
    "$1/usr/share/egl/egl_external_platform.d/"

# https://download.nvidia.com/XFree86/Linux-x86_64/470.74/README/installedcomponents.html
# > The Vulkan ICD configuration file included with the driver references
# > libGLX_nvidia.so.0, however in environments where X11 client libraries are
# > not available, libEGL_nvidia.so.0 should be used.
for file in nvidia_icd nvidia_layers; do
    sed 's|libGLX_nvidia.so.0|libEGL_nvidia.so.0|' "$file.json" > _
    mv -f _ "$file.json"
done

# libnvidia-vulkan-producer.so has no SONAME set
ln -s "libnvidia-vulkan-producer.so.$2" "$1/usr/lib/libnvidia-vulkan-producer.so.1"
ln -s "libnvidia-vulkan-producer.so.$2" "$1/usr/lib/libnvidia-vulkan-producer.so"

cp nvidia_icd.json "$1/usr/share/vulkan/icd.d/"
cp nvidia_layers.json "$1/usr/share/vulkan/implicit_layer.d/"

cp 10_nvidia.json "$1/usr/share/glvnd/egl_vendor.d/"

cp nvidia.icd "$1/etc/OpenCL/vendors/"

cp "nvidia-application-profiles-$2-rc" \
   "nvidia-application-profiles-$2-key-documentation" \
   "$1/usr/share/nvidia/"

for bin in $bins; do
    cp "nvidia-${bin}" "$1/usr/bin/"

    [ -f "nvidia-${bin}.1.gz" ] || continue
    cp "nvidia-${bin}.1.gz" "$1/usr/share/man/man1/"
done

chmod 4755 "$1/usr/bin/nvidia-modprobe"

for lib in $libs; do
    cp "${lib}.so.$2" "$1/usr/lib/"
done

for lib in $soname_libs; do
    cp "$lib" "$1/usr/lib/"
done

# soname links
for lib in "$1"/usr/lib/*.so*; do
    soname="${lib%/*}/$(readelf -d "$lib" | awk -F'[][]' '/SONAME/ {print $2}')"
    base=${soname%%.so*}
    [ -e "$soname" ] || ln -sf "${lib##*/}" "${soname}"
    [ -e "$base" ] || ln -sf "${soname##*/}" "${base}.so"
done


mkdir -p "$1/usr/lib/firmware/nvidia/$2"
cp firmware/*.bin "$1/usr/lib/firmware/nvidia/$2/"

# kernel modules
cd kernel

make modules
make INSTALL_MOD_PATH="$1/usr" INSTALL_MOD_STRIP=1 modules_install

for file in modules.symbols modules.dep modules.alias; do
    rm -f "$1/usr/lib/modules/"*"/$file"
done
